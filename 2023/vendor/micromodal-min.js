const MicroModal=(()=>{'use strict';const a=["a[href]","area[href]","input:not([disabled]):not([type=\"hidden\"]):not([aria-hidden])","select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]","[tabindex]:not([tabindex^=\"-\"])"];class b{constructor({targetModal:a,triggers:b=[],onShow:c=()=>{},onClose:d=()=>{},openTrigger:e="data-micromodal-trigger",closeTrigger:f="data-micromodal-close",disableScroll:g=!1,disableFocus:h=!1,awaitCloseAnimation:i=!1,awaitOpenAnimation:j=!1,debugMode:k=!1}){this.modal=document.getElementById(a),this.config={debugMode:k,disableScroll:g,openTrigger:e,closeTrigger:f,onShow:c,onClose:d,awaitCloseAnimation:i,awaitOpenAnimation:j,disableFocus:h},0<b.length&&this.registerTriggers(...b),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this)}registerTriggers(...a){a.filter(Boolean).forEach(a=>{a.addEventListener("click",a=>this.showModal(a))})}showModal(){if(this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),this.modal.classList.add("is-open"),this.modal.classList.add("active"),this.scrollBehaviour("disable"),this.addEventListeners(),this.config.awaitOpenAnimation){const a=()=>{this.modal.removeEventListener("animationend",a,!1),this.setFocusToFirstNode()};this.modal.addEventListener("animationend",a,!1)}else this.setFocusToFirstNode();this.config.onShow(this.modal,this.activeElement)}closeModal(){const a=this.modal;this.modal.setAttribute("aria-hidden","true"),this.removeEventListeners(),this.scrollBehaviour("enable"),this.activeElement&&this.activeElement.focus(),this.config.onClose(this.modal),this.config.awaitCloseAnimation?this.modal.addEventListener("animationend",function b(){a.classList.remove("is-open"),a.classList.remove("active"),a.removeEventListener("animationend",b,!1)},!1):(a.classList.remove("is-open"),a.classList.remove("active"))}closeModalById(a){this.modal=document.getElementById(a),this.modal&&this.closeModal()}scrollBehaviour(a){if(this.config.disableScroll){const b=document.querySelector("body");switch(a){case"enable":Object.assign(b.style,{overflow:"",height:""});break;case"disable":Object.assign(b.style,{overflow:"hidden",height:"100vh"});break;default:}}}addEventListeners(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),document.addEventListener("keydown",this.onKeydown)}removeEventListeners(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),document.removeEventListener("keydown",this.onKeydown)}onClick(a){a.target.hasAttribute(this.config.closeTrigger)&&(this.closeModal(),a.preventDefault())}onKeydown(a){27===a.keyCode&&this.closeModal(a),9===a.keyCode&&this.maintainFocus(a)}getFocusableNodes(){const b=this.modal.querySelectorAll(a);return Array(...b)}setFocusToFirstNode(){if(!this.config.disableFocus){const a=this.getFocusableNodes();a.length&&a[0].focus()}}maintainFocus(a){const b=this.getFocusableNodes();if(!this.modal.contains(document.activeElement))b[0].focus();else{const c=b.indexOf(document.activeElement);a.shiftKey&&0===c&&(b[b.length-1].focus(),a.preventDefault()),a.shiftKey||c!==b.length-1||(b[0].focus(),a.preventDefault())}}}let c=null;const d=(a,b)=>{const c=[];return a.forEach(a=>{const d=a.attributes[b].value;void 0===c[d]&&(c[d]=[]),c[d].push(a)}),c},e=a=>{if(!document.getElementById(a))return console.warn(`MicroModal: \u2757Seems like you have missed %c'${a}'`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;","ID somewhere in your code. Refer example below to resolve it."),console.warn(`%cExample:`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;",`<div class="modal" id="${a}"></div>`),!1},f=a=>{if(0>=a.length)return console.warn(`MicroModal: \u2757Please specify at least one %c'micromodal-trigger'`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;","data attribute."),console.warn(`%cExample:`,"background-color: #f8f9fa;color: #50596c;font-weight: bold;",`<a href="#" data-micromodal-trigger="my-modal"></a>`),!1},g=(a,b)=>{if(f(a),!b)return!0;for(var c in b)e(c);return!0},h=(a,d)=>{const f=d||{};f.targetModal=a;!0===f.debugMode&&!1===e(a)||(c=new b(f),c.showModal())},i=a=>{a?c.closeModalById(a):c.closeModal()};return{init:a=>{const e=Object.assign({},{openTrigger:"data-micromodal-trigger"},a),f=[...document.querySelectorAll(`[${e.openTrigger}]`)],h=d(f,e.openTrigger);if(!0!==e.debugMode||!1!==g(f,h))for(var i in h){let a=h[i];e.targetModal=i,e.triggers=[...a],c=new b(e)}},show:h,close:i}})();